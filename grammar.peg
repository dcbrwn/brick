program 'program' = statement*

statement 'statement' = _ expr:expression _ ';' _ {
  return expr;
}

expression 'expression' = expr:(value / group)* {
  return {
    type: 'expression',
    location: location(),
    data: expr,
  };
}

group 'group' = '(' expr:expression ')' {
  return expr;
}

value 'value' = _ value:(number / string / block / symbol) _ {
  return value;
}

number 'number' = digit+ {
  return {
    type: 'number',
    location: location(),
    data: parseFloat(text()),
  };
}

string 'string' = '"' string:[^"]* '"' {
  return {
    type: 'string',
    location: location(),
    data: string.join(''),
  };
}

block 'block' = '{' block:program '}' {
  return {
    type: 'block',
    location: location(),
    meta: {},
    data: block,
  };
}

symbol 'symbol' = character (digit / character)+ {
  return {
    type: 'symbol',
    location: location(),
    data: text(),
  };
}

_ = comment / padding

comment 'comment' = padding '#' [^\n]+ [\n]
padding = whitespace*

whitespace = [ \t\n\r]
punctuation = [(){};"#]
digit = [0-9]
character = !whitespace !punctuation !digit .